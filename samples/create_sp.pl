#！ /usr/bin/env perl

use strict;
use warnings;
use HPEOneView::Clients::Security::LoginSessions;
use HPEOneView::Clients::Servers::ServerHardware;
use HPEOneView::Behaviors::Activity::Tasks;
use HPEOneView::Behaviors::Servers::ServerProfiles;


my $hostname = '';
my $username = '';
my $password = '';
# Set this to directory server name if use directory authorization
#my $login_domain = '';

my $server_hardware_type_uri = '';
my $enclosure_group_uri = '';

my $login = HPEOneView::Clients::Security::LoginSessions->new(hostname=>$hostname,userName=>$username,password=>$password);
my $sh = HPEOneView::Clients::Servers::ServerHardware->new(session=>$login->session);
my $sp = HPEOneView::Behaviors::Servers::ServerProfiles->new(session=>$login->session);

open(my $fh, '>', 'server_hardware_uris');
foreach my $start (0..3) {
    my $resp = $sh->get_server_hardware(start=>$start, count=>1);
    my $json = parse_json($resp->content);
    my $sh= $json->{members}->[0]; 
    my $id = $start + 1;
    my $name = "sp-nospt-nospp-$id";
    print $fh $sh->{uri};

    my $body = qq({"type":"ServerProfileV6","serverHardwareUri":"$sh->{uri}","serverHardwareTypeUri":"$server_hardware_type_uri","enclosureGroupUri":"$enclosure_group_uri","serialNumberType":"Virtual","iscsiInitiatorNameType":"AutoGenerated","macType":"Virtual","wwnType":"Virtual","name":"$name","description":"","affinity":"Bay","connections":[],"boot":{"manageBoot":false},"bootMode":null,"firmware":{"manageFirmware":false,"firmwareBaselineUri":"","forceInstallFirmware":false,"firmwareInstallType":null},"bios":{"manageBios":false,"overriddenSettings":[]},"hideUnusedFlexNics":true,"iscsiInitiatorName":"","osDeploymentSettings":null,"localStorage":{"sasLogicalJBODs":[],"controllers":[]},"sanStorage":null});
    if (! $sp->create_sp($body)) {
        print $fh " failed\n";
    }
    print $fh "\n";
}

close $fh;
